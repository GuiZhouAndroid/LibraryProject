apply plugin: 'maven-publish'
apply plugin: 'signing'

/* 当您想在该项目中使用 Gradle 8 时，必须更改构建文件以使其与 Gradle 8 兼容。
*AbstractArchiveTask 任务类型已弃用的appendix、archiveName、archivePath、baseName、
* classifier 、desintationDir、extension 和version 属性已被删除。
* 请改用 archiveAppendix、archiveFileName、archiveFile、archiveBaseName、
* archiveClassifier、destinationDirectory、archiveExtension 和 archiveVersion 属性。
* 兼容Gradle之前的 只需将 gradle 版本降级到 7.6 即可解决该问题
*/
//仓库的用户名
static def getRepositoryUsername() {
    return "ZSAndroid"
}
//仓库的密码
static def getRepositoryPassword() {
    return "gUIzHOUaNDROID199821!"
}

if (project.hasProperty("android")) { // Android库
    tasks.register('sourcesJar', Jar) {
        archiveClassifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }
    tasks.register('javadoc', Javadoc) {
        excludes = ['**/*.kt'] // 从javadoc文件中排除所有kotlin文件
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        options.encoding = "utf-8"
        options.charSet = "utf-8"
    }
} else { //Java库
    tasks.register('sourcesJar', Jar) {
        dependsOn classes
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
    }
}

// 强制Java编码为UTF-8
tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

//强制JavaDoc编码为UTF-8
tasks.withType(Javadoc).configureEach {
    options.encoding = "UTF-8"
}

tasks.register('javadocJar', Jar) {
    dependsOn javadoc
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

//签名
signing {
    //required { gradle.taskGraph.hasTask("afterEvaluate") }
    sign configurations.archives
}

//配置上传包的参数
afterEvaluate {
    publishing {
        publications {
            //发布snapshot包
            mySnapshotPlugin(MavenPublication) {
                groupId 'work.zsdev' //对应sonatype平台新建中的Group Id
                artifactId 'dialog' //项目唯一标识符，对应项目名称
                version '1.0.0-SNAPSHOT' //发布的版本 SNAPSHOT
                //artifact(javadocJar)//将javadoc文档工件打包进aar
                artifact(sourcesJar)//将Java注释工件打包进aar
                // 依赖 bundleDebugAar 任务，并上传其产出的aar
                artifact(tasks.getByName("bundleDebugAar"))
                // 依赖传递：pom文件中声明依赖，从而传递到使用方
//                pom.withXml {
//                    def dependenciesNode = asNode().appendNode('dependencies')
//                    configurations.implementation.allDependencies.each {
//                        // 避免出现空节点或 artifactId=unspecified 的节点
//                        if (it.group != null && (it.name != null && "unspecified" != it.name) && it.version != null) {
//                            println "dependency=${it.toString()}"
//                            def dependencyNode = dependenciesNode.appendNode('dependency')
//                            dependencyNode.appendNode('groupId', it.group)
//                            dependencyNode.appendNode('artifactId', it.name)
//                            dependencyNode.appendNode('version', it.version)
//                            dependencyNode.appendNode('scope', 'implementation')
//                        }
//                    }
//                }
                //项目配置
                pom {
                    packaging 'aar' //安卓Library库：aar 、后端Java：jar
                    name = 'dialog' // 发布库的简单名称
                    description = 'Android自定义对话框' // 发布库的描述
                    url = 'https://github.com/GuiZhouAndroid/LibraryProject' //Github项目首页
                    //Git项目信息
                    scm {
                        //git项目连接地址
                        connection = 'https://github.com/GuiZhouAndroid/LibraryProject.git'
                        //git项目开发者连接地址
                        developerConnection = 'https://github.com/GuiZhouAndroid/LibraryProject.git'
                        //Github项目首页
                        url = 'https://github.com/GuiZhouAndroid/LibraryProject.git'
                    }
                    // 开放许可证书
                    licenses {
                        license {
                            //许可名称
                            name = 'The Apache License, Version 2.0'
                            //许可URL
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    //开发者SonaType账号的信息
                    developers {
                        developer {
                            //全名
                            id = 'ZhangSong'
                            //用户名
                            name = 'ZSAndroid'
                            //邮箱
                            email = '2393579405@qq.com'
                        }
                    }
                }
            }
        }
    }
}

//配置上传SonaType仓库Maven地址和密码
publishing {
    repositories {
        //开发版
        maven {
            url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            credentials {
                username = getRepositoryUsername()
                password = getRepositoryPassword()
            }
        }
    }
}